plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.0' // Add the Shadow plugin

}

group 'org.example'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}
// Print the source directories for debugging purposes
task printSourceDirs {
    doLast {
        println "Test source dirs: ${sourceSets.test.java.srcDirs}"
    }
}

repositories {
    mavenCentral()

}
test {
    useTestNG() {
        //include "**/*TechlisticTestng.class" // You can modify to include your specific test class
       suites "src/test/resources/*Testng.xml"
    }

    // Enable verbose logging to see what Gradle is doing
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
        exceptionFormat "full"
    }
    
}
sourceSets {
    test {
        java {
            // Check if we're in the GitHub Actions environment
            if (project.hasProperty('githubAction')) {
                // If running on GitHub Actions, tests are in the 'automation' folder
                srcDirs = ['automation/src/test/java']
            } else {
                // If running locally, use the default path for the test source directory
                srcDirs = ['src/test/java/']
            }
        }
    }
}
dependencies {
    testImplementation group: 'org.testng', name: 'testng', version: '7.7.0'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.25.0'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.8.0'
    testImplementation 'org.slf4j:slf4j-api:2.0.9'
    testRuntimeOnly 'org.slf4j:slf4j-simple:2.0.9'




}

shadowJar {
    archiveBaseName.set('DemoSiteTechlistic')
    archiveClassifier.set('all')
    archiveVersion.set('')
    manifest {
        attributes(
                'Main-Class': 'TechlisticClassPackage.TechlisticBaseClass' // Ensure this matches your main class
        )
    }
}
/*tasks.withType(ProcessResources) {
    enabled = false
}*/
